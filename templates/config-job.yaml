{{- if .Values.config.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: {{ template "gluu.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.config.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "gluu.config.fullname" . }}
  annotations:
    "helm.sh/hook": pre-install,post-delete
spec:
  template:
    metadata:
    {{- if .Values.config.podAnnotations }}
      annotations:
{{ toYaml .Values.config.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        app: {{ template "gluu.name" . }}
        component: "{{ .Values.config.name }}"
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "gluu.serviceAccountName.config" . }}
{{- if .Values.config.priorityClassName }}
      priorityClassName: "{{ .Values.config.priorityClassName }}"
{{- end }}
      restartPolicy: {{ .Values.config.restartPolicy }}
      containers:
        - name: {{ template "gluu.name" . }}-{{ .Values.config.name }}
          image: "{{ .Values.config.image.repository }}:{{ .Values.config.image.tag }}"
          args:
          {{- range $key, $value := .Values.config.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          env:
            - name: GLUU_CONFIG_ADAPTER
              value: "kubernetes"
            - name: GLUU_KUBERNETES_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: LDAP_TYPE
              value: "opendj"
          {{- range $key, $value := .Values.config.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
          {{- end }}
          command: ["python", "/opt/config-init/scripts/entrypoint.py", "generate", "--admin-pw", "$(ADMIN_PW)", "--email", "$(EMAIL)", "--domain", "$(DOMAIN)", "--org-name", "$(ORG_NAME)", "--country-code", "$(COUNTRY_CODE)", "--state", "$(STATE)", "--city", "$(CITY)", "--ldap-type", "$(LDAP_TYPE)"]
          volumeMounts:
            - name: config
              mountPath: /opt/config-init/db/
    {{- if .Values.config.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.config.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.config.securityContext }}
      securityContext:
{{ toYaml .Values.config.securityContext | indent 8 }}
    {{- end }}
    {{- if .Values.config.tolerations }}
      tolerations:
{{ toYaml .Values.config.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.config.affinity }}
      affinity:
{{ toYaml .Values.config.affinity | indent 8 }}
    {{- end }}
      volumes:
        - name: config
        {{- if .Values.config.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.config.persistentVolume.existingClaim }}{{ .Values.config.persistentVolume.existingClaim }}{{- else }}{{ template "gluu.config.fullname" . }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
{{- end }}
