rbac:
  create: true

## Define serviceAccount names for components. Defaults to component's fully qualified name.
##
serviceAccounts:
  redis:
    create: false
    name:
  opendj:
    create: false
    name:
  oxauth:
    create: false
    name:
  oxtrust:
    create: false
    name:
  config:
    create: false
    name:
  oxpassport:
    create: false
    name:

oxpassport:
  ## oxpassport container name
  ##
  name: oxpassport

  ##  container image
  ##
  image:
    repository: gluufederation/oxpassport
    tag: latest
    pullPolicy: Always

  ## oxpassport priorityClassName
  ##
  priorityClassName: ""

  ## Additional oxpassport container arguments
  ##
  extraArgs: {}

  ## Node tolerations for oxpassport scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for oxpassport pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Annotations to be added to oxpassport pods
  ##
  podAnnotations: {}

  replicaCount: 1

  ## oxpassport resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to oxpassport pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""
    servicePort: 8090
    type: ClusterIP

config:
  ## config container name
  ##
  name: config

  ##  container image
  ##
  image:
    repository: gluufederation/config-init
    tag: latest

  ## config restartPolicy
  ##
  restartPolicy: Never

  ## config priorityClassName
  ##
  priorityClassName: ""

  ## Additional config container arguments
  ##
  extraArgs: {}

  ## Node tolerations for config scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for config pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Annotations to be added to config pods
  ##
  podAnnotations: {}

  ## Security context to be added to config pods
  ##
  securityContext: {}

  persistentVolume:
    ## If true, config will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true

    ## config data Persistent Volume access modes
    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    accessModes:
      - ReadWriteOnce

    ## config data Persistent Volume Claim annotations
    ##
    annotations: {}

    ## config data Persistent Volume existing claim name
    ## Requires config.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## config data Persistent Volume size
    ##
    size: 1Gi

    ## config data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

oxtrust:
  ## oxtrust container name
  ##
  name: oxtrust

  ##  container image
  ##
  image:
    repository: gluufederation/oxtrust
    tag: latest
    pullPolicy: Always

  ## oxtrust priorityClassName
  ##
  priorityClassName: ""

  ## Additional oxtrust container arguments
  ##
  extraArgs: {}

  ingress:
    ## If true, oxtrust Ingress will be created
    ##
    enabled: true

    ## oxtrust Ingress annotations
    ##
    annotations:
      nginx.ingress.kubernetes.io/app-root: "/identity"
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/session-cookie-name: "route"
      nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"

    ## oxtrust Ingress additional labels
    ##
    extraLabels: {}

    ## oxtrust Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts:
      - gluu.kube.lab.ile.montreal.qc.ca
    #   - oxtrust.domain.com
    #   - domain.com/oxtrust

    ## oxtrust Ingress TLS configuration
    ## Secrets must be manually created in the namespace
    ##
    tls: []
    #   - secretName: prometheus-alerts-tls
    #     hosts:
    #       - oxtrust.domain.com


  ## Node tolerations for oxtrust scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for oxtrust pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Annotations to be added to oxtrust pods
  ##
  podAnnotations: {}

  replicaCount: 1

  ## oxtrust resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits:
      #cpu: 10m
      memory: 1536Mi
    requests:
      #cpu: 10m
      memory: 1000Mi

  ## Security context to be added to oxtrust pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""
    servicePort: 8080
    type: ClusterIP

  persistentVolume:
    ## If true, oxtrust will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true

    ## oxtrust data Persistent Volume access modes
    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    accessModes:
      - ReadWriteOnce

    ## oxtrust data Persistent Volume Claim annotations
    ##
    annotations: {}

    ## oxtrust data Persistent Volume existing claim name
    ## Requires oxtrust.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## oxtrust data Persistent Volume size
    ##
    size: 1Gi

    ## oxtrust data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

oxauth:
  ## oxauth container name
  ##
  name: oxauth

  ##  container image
  ##
  image:
    repository: gluufederation/oxauth
    tag: latest
    pullPolicy: Always

  ## oxauth priorityClassName
  ##
  priorityClassName: ""

  ## Additional oxauth container arguments
  ##
  extraArgs: {}

  ingress:
    ## If true, oxauth Ingress will be created
    ##
    enabled: true

    ## oxauth Ingress annotations
    ##
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
      nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/openid-configuration /oxauth/.well-known/openid-configuration$1 break;"
      nginx.ingress.kubernetes.io/rewrite-target: /oxauth/.well-known/openid-configuration

    ## oxauth Ingress additional labels
    ##
    extraLabels: {}

    ## oxauth Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts:
      - gluu.kube.lab.ile.montreal.qc.ca
    #   - oxauth.domain.com
    #   - domain.com/oxauth

    ## oxauth Ingress TLS configuration
    ## Secrets must be manually created in the namespace
    ##
    tls: []
    #   - secretName: prometheus-alerts-tls
    #     hosts:
    #       - oxauth.domain.com

  ## Node tolerations for oxauth scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for oxauth pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Annotations to be added to oxauth pods
  ##
  podAnnotations: {}

  replicaCount: 1

  ## oxauth resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits:
      #cpu: 10m
      memory: 1536Mi
    requests:
      #cpu: 10m
      memory: 1000Mi

  ## Security context to be added to oxauth pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""
    servicePort: 8080
    type: ClusterIP

  persistentVolume:
    ## If true, oxauth will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true

    ## oxauth data Persistent Volume access modes
    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    accessModes:
      - ReadWriteOnce

    ## oxauth data Persistent Volume Claim annotations
    ##
    annotations: {}

    ## oxauth data Persistent Volume existing claim name
    ## Requires oxauth.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## oxauth data Persistent Volume size
    ##
    size: 1Gi

    ## oxauth data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

opendj:
  ## opendj container name
  ##
  name: opendj

  ##  container image
  ##
  image:
    repository: gluufederation/opendj
    tag: latest
    pullPolicy: Always

  ## opendj priorityClassName
  ##
  priorityClassName: ""

  ## Additional opendj container arguments
  ##
  extraArgs: {}

  ## Node tolerations for opendj scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for opendj pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Annotations to be added to opendj pods
  ##
  podAnnotations: {}

  replicaCount: 1

  ## opendj resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to opendj pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    #clusterIP: "None"
    clusterIP: ""
    ldaps:
      servicePort: 1636
    ldap:
      servicePort: 1389
    replication:
      servicePort: 8989
    admin:
      servicePort: 4444
    type: ClusterIP

  persistentVolume:
    ## If true, opendj will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true

    ## opendj data Persistent Volume access modes
    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    accessModes:
      - ReadWriteOnce

    ## opendj data Persistent Volume Claim annotations
    ##
    annotations: {}

    ## opendj data Persistent Volume existing claim name
    ## Requires opendj.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## opendj data Persistent Volume size
    ##
    size: 10Gi

    ## opendj data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

redis:
  ## redis container name
  ##
  name: redis

  ## redis container image
  ##
  image:
    repository: library/redis
    tag: latest
    pullPolicy: IfNotPresent

  ## redis priorityClassName
  ##
  priorityClassName: ""

  ## Additional redis container arguments
  ##
  extraArgs: {}

  ## Node tolerations for redis scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for redis pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Annotations to be added to redis pods
  ##
  podAnnotations: {}

  replicaCount: 1

  ## redis resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to push-gateway pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""
    servicePort: 6379
    type: ClusterIP
